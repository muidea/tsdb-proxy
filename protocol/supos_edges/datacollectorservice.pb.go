// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: datacollectorservice.proto

/*
	Package supos_proto_collector_backend is a generated protocol buffer package.

	It is generated from these files:
		datacollectorservice.proto

	It has these top-level messages:
		MetaDataOperation
		MetaDataOperationResult
		MetaDataRequest
		MetaDataResponse
		DeleteTagRequest
		DeleteTagResponse
		UpdateTagValueRequest
		UpdateTagValueResponse
		LoginRequest
		LoginResponse
		LogoutRequest
		LogoutResponse
		HeartBeatDataRequest
		HeartBeatDataResponse
		WriteValue
		UpChannel
		StatusNotify
		DownChannel
*/
package supos_proto_collector_backend

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import model "supos.ai/data-lake/external/tsdb-proxy/common/model"
import model1 "supos.ai/data-lake/external/tsdb-proxy/common/model"

import context "golang.org/x/net/context"
import grpc "google.golang.org/grpc"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 元数据操作
type MetaDataAction int32

const (
	MetaDataAction_MetaDataAction_ADD    MetaDataAction = 0
	MetaDataAction_MetaDataAction_DELETE MetaDataAction = 1
	MetaDataAction_MetaDataAction_MODIFY MetaDataAction = 2
)

var MetaDataAction_name = map[int32]string{
	0: "MetaDataAction_ADD",
	1: "MetaDataAction_DELETE",
	2: "MetaDataAction_MODIFY",
}
var MetaDataAction_value = map[string]int32{
	"MetaDataAction_ADD":    0,
	"MetaDataAction_DELETE": 1,
	"MetaDataAction_MODIFY": 2,
}

func (x MetaDataAction) String() string {
	return proto.EnumName(MetaDataAction_name, int32(x))
}
func (MetaDataAction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorDatacollectorservice, []int{0}
}

type MetaDataOperation struct {
	Action      MetaDataAction           `protobuf:"varint,1,opt,name=action,proto3,enum=supos.proto.collector.backend.MetaDataAction" json:"action,omitempty"`
	ObjectName  string                   `protobuf:"bytes,2,opt,name=objectName,proto3" json:"objectName,omitempty"`
	AddOrModify *model1.PropertyOrObject `protobuf:"bytes,3,opt,name=addOrModify" json:"addOrModify,omitempty"`
}

func (m *MetaDataOperation) Reset()         { *m = MetaDataOperation{} }
func (m *MetaDataOperation) String() string { return proto.CompactTextString(m) }
func (*MetaDataOperation) ProtoMessage()    {}
func (*MetaDataOperation) Descriptor() ([]byte, []int) {
	return fileDescriptorDatacollectorservice, []int{0}
}

func (m *MetaDataOperation) GetAction() MetaDataAction {
	if m != nil {
		return m.Action
	}
	return MetaDataAction_MetaDataAction_ADD
}

func (m *MetaDataOperation) GetObjectName() string {
	if m != nil {
		return m.ObjectName
	}
	return ""
}

func (m *MetaDataOperation) GetAddOrModify() *model1.PropertyOrObject {
	if m != nil {
		return m.AddOrModify
	}
	return nil
}

// 元数据操作的回应，暂空
type MetaDataOperationResult struct {
}

func (m *MetaDataOperationResult) Reset()         { *m = MetaDataOperationResult{} }
func (m *MetaDataOperationResult) String() string { return proto.CompactTextString(m) }
func (*MetaDataOperationResult) ProtoMessage()    {}
func (*MetaDataOperationResult) Descriptor() ([]byte, []int) {
	return fileDescriptorDatacollectorservice, []int{1}
}

// 属性操作请求，即单个属性操作的集合
type MetaDataRequest struct {
	Timestamp  string               `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Status     string               `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Version    int64                `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Operations []*MetaDataOperation `protobuf:"bytes,4,rep,name=operations" json:"operations,omitempty"`
}

func (m *MetaDataRequest) Reset()         { *m = MetaDataRequest{} }
func (m *MetaDataRequest) String() string { return proto.CompactTextString(m) }
func (*MetaDataRequest) ProtoMessage()    {}
func (*MetaDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorDatacollectorservice, []int{2}
}

func (m *MetaDataRequest) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *MetaDataRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MetaDataRequest) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *MetaDataRequest) GetOperations() []*MetaDataOperation {
	if m != nil {
		return m.Operations
	}
	return nil
}

type MetaDataResponse struct {
	ErrorCode int32 `protobuf:"varint,1,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (m *MetaDataResponse) Reset()         { *m = MetaDataResponse{} }
func (m *MetaDataResponse) String() string { return proto.CompactTextString(m) }
func (*MetaDataResponse) ProtoMessage()    {}
func (*MetaDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptorDatacollectorservice, []int{3}
}

func (m *MetaDataResponse) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

// 批量删除位号
type DeleteTagRequest struct {
	Tags []string `protobuf:"bytes,1,rep,name=tags" json:"tags,omitempty"`
}

func (m *DeleteTagRequest) Reset()         { *m = DeleteTagRequest{} }
func (m *DeleteTagRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTagRequest) ProtoMessage()    {}
func (*DeleteTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorDatacollectorservice, []int{4}
}

func (m *DeleteTagRequest) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

// 删除位号的回应，暂空
type DeleteTagResponse struct {
	ErrorCode int32 `protobuf:"varint,1,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (m *DeleteTagResponse) Reset()         { *m = DeleteTagResponse{} }
func (m *DeleteTagResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteTagResponse) ProtoMessage()    {}
func (*DeleteTagResponse) Descriptor() ([]byte, []int) {
	return fileDescriptorDatacollectorservice, []int{5}
}

func (m *DeleteTagResponse) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

// 更新位号实时值请求
type UpdateTagValueRequest struct {
	Values *model.ValueSequnce `protobuf:"bytes,1,opt,name=values" json:"values,omitempty"`
}

func (m *UpdateTagValueRequest) Reset()         { *m = UpdateTagValueRequest{} }
func (m *UpdateTagValueRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTagValueRequest) ProtoMessage()    {}
func (*UpdateTagValueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorDatacollectorservice, []int{6}
}

func (m *UpdateTagValueRequest) GetValues() *model.ValueSequnce {
	if m != nil {
		return m.Values
	}
	return nil
}

// 更新位号实时值回应
type UpdateTagValueResponse struct {
	ErrorCode int32 `protobuf:"varint,1,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (m *UpdateTagValueResponse) Reset()         { *m = UpdateTagValueResponse{} }
func (m *UpdateTagValueResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateTagValueResponse) ProtoMessage()    {}
func (*UpdateTagValueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptorDatacollectorservice, []int{7}
}

func (m *UpdateTagValueResponse) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

// 登陆请求
type LoginRequest struct {
	AuthToken    string `protobuf:"bytes,1,opt,name=authToken,proto3" json:"authToken,omitempty"`
	IdentifyID   string `protobuf:"bytes,2,opt,name=identifyID,proto3" json:"identifyID,omitempty"`
	EndpointName string `protobuf:"bytes,3,opt,name=endpointName,proto3" json:"endpointName,omitempty"`
}

func (m *LoginRequest) Reset()                    { *m = LoginRequest{} }
func (m *LoginRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()               {}
func (*LoginRequest) Descriptor() ([]byte, []int) { return fileDescriptorDatacollectorservice, []int{8} }

func (m *LoginRequest) GetAuthToken() string {
	if m != nil {
		return m.AuthToken
	}
	return ""
}

func (m *LoginRequest) GetIdentifyID() string {
	if m != nil {
		return m.IdentifyID
	}
	return ""
}

func (m *LoginRequest) GetEndpointName() string {
	if m != nil {
		return m.EndpointName
	}
	return ""
}

// 登陆响应
type LoginResponse struct {
	ErrorCode int32  `protobuf:"varint,1,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	Reason    string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	SessionID string `protobuf:"bytes,3,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptorDatacollectorservice, []int{9}
}

func (m *LoginResponse) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *LoginResponse) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *LoginResponse) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

type LogoutRequest struct {
}

func (m *LogoutRequest) Reset()         { *m = LogoutRequest{} }
func (m *LogoutRequest) String() string { return proto.CompactTextString(m) }
func (*LogoutRequest) ProtoMessage()    {}
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorDatacollectorservice, []int{10}
}

type LogoutResponse struct {
}

func (m *LogoutResponse) Reset()         { *m = LogoutResponse{} }
func (m *LogoutResponse) String() string { return proto.CompactTextString(m) }
func (*LogoutResponse) ProtoMessage()    {}
func (*LogoutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptorDatacollectorservice, []int{11}
}

type HeartBeatDataRequest struct {
	Info string `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (m *HeartBeatDataRequest) Reset()         { *m = HeartBeatDataRequest{} }
func (m *HeartBeatDataRequest) String() string { return proto.CompactTextString(m) }
func (*HeartBeatDataRequest) ProtoMessage()    {}
func (*HeartBeatDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorDatacollectorservice, []int{12}
}

func (m *HeartBeatDataRequest) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

type HeartBeatDataResponse struct {
	Info string `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (m *HeartBeatDataResponse) Reset()         { *m = HeartBeatDataResponse{} }
func (m *HeartBeatDataResponse) String() string { return proto.CompactTextString(m) }
func (*HeartBeatDataResponse) ProtoMessage()    {}
func (*HeartBeatDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptorDatacollectorservice, []int{13}
}

func (m *HeartBeatDataResponse) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

type WriteValue struct {
	Values *model.ValueSequnce `protobuf:"bytes,1,opt,name=values" json:"values,omitempty"`
}

func (m *WriteValue) Reset()                    { *m = WriteValue{} }
func (m *WriteValue) String() string            { return proto.CompactTextString(m) }
func (*WriteValue) ProtoMessage()               {}
func (*WriteValue) Descriptor() ([]byte, []int) { return fileDescriptorDatacollectorservice, []int{14} }

func (m *WriteValue) GetValues() *model.ValueSequnce {
	if m != nil {
		return m.Values
	}
	return nil
}

type UpChannel struct {
	// Types that are valid to be assigned to Cmd:
	//	*UpChannel_LoginRequest
	//	*UpChannel_LogoutRequest
	Cmd isUpChannel_Cmd `protobuf_oneof:"cmd"`
}

func (m *UpChannel) Reset()                    { *m = UpChannel{} }
func (m *UpChannel) String() string            { return proto.CompactTextString(m) }
func (*UpChannel) ProtoMessage()               {}
func (*UpChannel) Descriptor() ([]byte, []int) { return fileDescriptorDatacollectorservice, []int{15} }

type isUpChannel_Cmd interface {
	isUpChannel_Cmd()
	MarshalTo([]byte) (int, error)
	Size() int
}

type UpChannel_LoginRequest struct {
	LoginRequest *LoginRequest `protobuf:"bytes,1,opt,name=loginRequest,oneof"`
}
type UpChannel_LogoutRequest struct {
	LogoutRequest *LogoutRequest `protobuf:"bytes,2,opt,name=logoutRequest,oneof"`
}

func (*UpChannel_LoginRequest) isUpChannel_Cmd()  {}
func (*UpChannel_LogoutRequest) isUpChannel_Cmd() {}

func (m *UpChannel) GetCmd() isUpChannel_Cmd {
	if m != nil {
		return m.Cmd
	}
	return nil
}

func (m *UpChannel) GetLoginRequest() *LoginRequest {
	if x, ok := m.GetCmd().(*UpChannel_LoginRequest); ok {
		return x.LoginRequest
	}
	return nil
}

func (m *UpChannel) GetLogoutRequest() *LogoutRequest {
	if x, ok := m.GetCmd().(*UpChannel_LogoutRequest); ok {
		return x.LogoutRequest
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UpChannel) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UpChannel_OneofMarshaler, _UpChannel_OneofUnmarshaler, _UpChannel_OneofSizer, []interface{}{
		(*UpChannel_LoginRequest)(nil),
		(*UpChannel_LogoutRequest)(nil),
	}
}

func _UpChannel_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UpChannel)
	// cmd
	switch x := m.Cmd.(type) {
	case *UpChannel_LoginRequest:
		_ = b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LoginRequest); err != nil {
			return err
		}
	case *UpChannel_LogoutRequest:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LogoutRequest); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UpChannel.Cmd has unexpected type %T", x)
	}
	return nil
}

func _UpChannel_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UpChannel)
	switch tag {
	case 1: // cmd.loginRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LoginRequest)
		err := b.DecodeMessage(msg)
		m.Cmd = &UpChannel_LoginRequest{msg}
		return true, err
	case 2: // cmd.logoutRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LogoutRequest)
		err := b.DecodeMessage(msg)
		m.Cmd = &UpChannel_LogoutRequest{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UpChannel_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UpChannel)
	// cmd
	switch x := m.Cmd.(type) {
	case *UpChannel_LoginRequest:
		s := proto.Size(x.LoginRequest)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UpChannel_LogoutRequest:
		s := proto.Size(x.LogoutRequest)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type StatusNotify struct {
	Cmd int32 `protobuf:"varint,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
}

func (m *StatusNotify) Reset()         { *m = StatusNotify{} }
func (m *StatusNotify) String() string { return proto.CompactTextString(m) }
func (*StatusNotify) ProtoMessage()    {}
func (*StatusNotify) Descriptor() ([]byte, []int) {
	return fileDescriptorDatacollectorservice, []int{16}
}

func (m *StatusNotify) GetCmd() int32 {
	if m != nil {
		return m.Cmd
	}
	return 0
}

type DownChannel struct {
	// Types that are valid to be assigned to Cmd:
	//	*DownChannel_StatusNotify
	//	*DownChannel_LoginResponse
	//	*DownChannel_LogoutResponse
	//	*DownChannel_WriteValue
	Cmd isDownChannel_Cmd `protobuf_oneof:"cmd"`
}

func (m *DownChannel) Reset()                    { *m = DownChannel{} }
func (m *DownChannel) String() string            { return proto.CompactTextString(m) }
func (*DownChannel) ProtoMessage()               {}
func (*DownChannel) Descriptor() ([]byte, []int) { return fileDescriptorDatacollectorservice, []int{17} }

type isDownChannel_Cmd interface {
	isDownChannel_Cmd()
	MarshalTo([]byte) (int, error)
	Size() int
}

type DownChannel_StatusNotify struct {
	StatusNotify *StatusNotify `protobuf:"bytes,1,opt,name=statusNotify,oneof"`
}
type DownChannel_LoginResponse struct {
	LoginResponse *LoginResponse `protobuf:"bytes,2,opt,name=loginResponse,oneof"`
}
type DownChannel_LogoutResponse struct {
	LogoutResponse *LogoutResponse `protobuf:"bytes,3,opt,name=logoutResponse,oneof"`
}
type DownChannel_WriteValue struct {
	WriteValue *WriteValue `protobuf:"bytes,4,opt,name=writeValue,oneof"`
}

func (*DownChannel_StatusNotify) isDownChannel_Cmd()   {}
func (*DownChannel_LoginResponse) isDownChannel_Cmd()  {}
func (*DownChannel_LogoutResponse) isDownChannel_Cmd() {}
func (*DownChannel_WriteValue) isDownChannel_Cmd()     {}

func (m *DownChannel) GetCmd() isDownChannel_Cmd {
	if m != nil {
		return m.Cmd
	}
	return nil
}

func (m *DownChannel) GetStatusNotify() *StatusNotify {
	if x, ok := m.GetCmd().(*DownChannel_StatusNotify); ok {
		return x.StatusNotify
	}
	return nil
}

func (m *DownChannel) GetLoginResponse() *LoginResponse {
	if x, ok := m.GetCmd().(*DownChannel_LoginResponse); ok {
		return x.LoginResponse
	}
	return nil
}

func (m *DownChannel) GetLogoutResponse() *LogoutResponse {
	if x, ok := m.GetCmd().(*DownChannel_LogoutResponse); ok {
		return x.LogoutResponse
	}
	return nil
}

func (m *DownChannel) GetWriteValue() *WriteValue {
	if x, ok := m.GetCmd().(*DownChannel_WriteValue); ok {
		return x.WriteValue
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*DownChannel) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _DownChannel_OneofMarshaler, _DownChannel_OneofUnmarshaler, _DownChannel_OneofSizer, []interface{}{
		(*DownChannel_StatusNotify)(nil),
		(*DownChannel_LoginResponse)(nil),
		(*DownChannel_LogoutResponse)(nil),
		(*DownChannel_WriteValue)(nil),
	}
}

func _DownChannel_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*DownChannel)
	// cmd
	switch x := m.Cmd.(type) {
	case *DownChannel_StatusNotify:
		_ = b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StatusNotify); err != nil {
			return err
		}
	case *DownChannel_LoginResponse:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LoginResponse); err != nil {
			return err
		}
	case *DownChannel_LogoutResponse:
		_ = b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LogoutResponse); err != nil {
			return err
		}
	case *DownChannel_WriteValue:
		_ = b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.WriteValue); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("DownChannel.Cmd has unexpected type %T", x)
	}
	return nil
}

func _DownChannel_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*DownChannel)
	switch tag {
	case 1: // cmd.statusNotify
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StatusNotify)
		err := b.DecodeMessage(msg)
		m.Cmd = &DownChannel_StatusNotify{msg}
		return true, err
	case 2: // cmd.loginResponse
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LoginResponse)
		err := b.DecodeMessage(msg)
		m.Cmd = &DownChannel_LoginResponse{msg}
		return true, err
	case 3: // cmd.logoutResponse
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LogoutResponse)
		err := b.DecodeMessage(msg)
		m.Cmd = &DownChannel_LogoutResponse{msg}
		return true, err
	case 4: // cmd.writeValue
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(WriteValue)
		err := b.DecodeMessage(msg)
		m.Cmd = &DownChannel_WriteValue{msg}
		return true, err
	default:
		return false, nil
	}
}

func _DownChannel_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*DownChannel)
	// cmd
	switch x := m.Cmd.(type) {
	case *DownChannel_StatusNotify:
		s := proto.Size(x.StatusNotify)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DownChannel_LoginResponse:
		s := proto.Size(x.LoginResponse)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DownChannel_LogoutResponse:
		s := proto.Size(x.LogoutResponse)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DownChannel_WriteValue:
		s := proto.Size(x.WriteValue)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*MetaDataOperation)(nil), "supos.proto.collector.backend.MetaDataOperation")
	proto.RegisterType((*MetaDataOperationResult)(nil), "supos.proto.collector.backend.MetaDataOperationResult")
	proto.RegisterType((*MetaDataRequest)(nil), "supos.proto.collector.backend.MetaDataRequest")
	proto.RegisterType((*MetaDataResponse)(nil), "supos.proto.collector.backend.MetaDataResponse")
	proto.RegisterType((*DeleteTagRequest)(nil), "supos.proto.collector.backend.DeleteTagRequest")
	proto.RegisterType((*DeleteTagResponse)(nil), "supos.proto.collector.backend.DeleteTagResponse")
	proto.RegisterType((*UpdateTagValueRequest)(nil), "supos.proto.collector.backend.UpdateTagValueRequest")
	proto.RegisterType((*UpdateTagValueResponse)(nil), "supos.proto.collector.backend.UpdateTagValueResponse")
	proto.RegisterType((*LoginRequest)(nil), "supos.proto.collector.backend.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "supos.proto.collector.backend.LoginResponse")
	proto.RegisterType((*LogoutRequest)(nil), "supos.proto.collector.backend.LogoutRequest")
	proto.RegisterType((*LogoutResponse)(nil), "supos.proto.collector.backend.LogoutResponse")
	proto.RegisterType((*HeartBeatDataRequest)(nil), "supos.proto.collector.backend.HeartBeatDataRequest")
	proto.RegisterType((*HeartBeatDataResponse)(nil), "supos.proto.collector.backend.HeartBeatDataResponse")
	proto.RegisterType((*WriteValue)(nil), "supos.proto.collector.backend.WriteValue")
	proto.RegisterType((*UpChannel)(nil), "supos.proto.collector.backend.UpChannel")
	proto.RegisterType((*StatusNotify)(nil), "supos.proto.collector.backend.StatusNotify")
	proto.RegisterType((*DownChannel)(nil), "supos.proto.collector.backend.DownChannel")
	proto.RegisterEnum("supos.proto.collector.backend.MetaDataAction", MetaDataAction_name, MetaDataAction_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DataCollectorService service

type DataCollectorServiceClient interface {
	// rpc Login (LoginRequest) returns (LoginResponse);
	// rpc Logout(google.protobuf.Empty) returns (google.protobuf.Empty);
	HeartBeatData(ctx context.Context, in *HeartBeatDataRequest, opts ...grpc.CallOption) (*HeartBeatDataResponse, error)
	DoMetaData(ctx context.Context, in *MetaDataRequest, opts ...grpc.CallOption) (*MetaDataResponse, error)
	DeleteTags(ctx context.Context, in *DeleteTagRequest, opts ...grpc.CallOption) (*DeleteTagResponse, error)
	// rpc UpdateTagValue(UpdateTagValueRequest) returns (UpdateTagValueResponse);
	UpdateTagValue(ctx context.Context, opts ...grpc.CallOption) (DataCollectorService_UpdateTagValueClient, error)
	CollectorSerivceChannel(ctx context.Context, opts ...grpc.CallOption) (DataCollectorService_CollectorSerivceChannelClient, error)
}

type dataCollectorServiceClient struct {
	cc *grpc.ClientConn
}

func NewDataCollectorServiceClient(cc *grpc.ClientConn) DataCollectorServiceClient {
	return &dataCollectorServiceClient{cc}
}

func (c *dataCollectorServiceClient) HeartBeatData(ctx context.Context, in *HeartBeatDataRequest, opts ...grpc.CallOption) (*HeartBeatDataResponse, error) {
	out := new(HeartBeatDataResponse)
	err := grpc.Invoke(ctx, "/supos.proto.collector.backend.DataCollectorService/HeartBeatData", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCollectorServiceClient) DoMetaData(ctx context.Context, in *MetaDataRequest, opts ...grpc.CallOption) (*MetaDataResponse, error) {
	out := new(MetaDataResponse)
	err := grpc.Invoke(ctx, "/supos.proto.collector.backend.DataCollectorService/DoMetaData", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCollectorServiceClient) DeleteTags(ctx context.Context, in *DeleteTagRequest, opts ...grpc.CallOption) (*DeleteTagResponse, error) {
	out := new(DeleteTagResponse)
	err := grpc.Invoke(ctx, "/supos.proto.collector.backend.DataCollectorService/DeleteTags", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCollectorServiceClient) UpdateTagValue(ctx context.Context, opts ...grpc.CallOption) (DataCollectorService_UpdateTagValueClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_DataCollectorService_serviceDesc.Streams[0], c.cc, "/supos.proto.collector.backend.DataCollectorService/UpdateTagValue", opts...)
	if err != nil {
		return nil, err
	}
	x := &dataCollectorServiceUpdateTagValueClient{stream}
	return x, nil
}

type DataCollectorService_UpdateTagValueClient interface {
	Send(*model.ValueSequnce) error
	CloseAndRecv() (*UpdateTagValueResponse, error)
	grpc.ClientStream
}

type dataCollectorServiceUpdateTagValueClient struct {
	grpc.ClientStream
}

func (x *dataCollectorServiceUpdateTagValueClient) Send(m *model.ValueSequnce) error {
	return x.ClientStream.SendMsg(m)
}

func (x *dataCollectorServiceUpdateTagValueClient) CloseAndRecv() (*UpdateTagValueResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(UpdateTagValueResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dataCollectorServiceClient) CollectorSerivceChannel(ctx context.Context, opts ...grpc.CallOption) (DataCollectorService_CollectorSerivceChannelClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_DataCollectorService_serviceDesc.Streams[1], c.cc, "/supos.proto.collector.backend.DataCollectorService/CollectorSerivceChannel", opts...)
	if err != nil {
		return nil, err
	}
	x := &dataCollectorServiceCollectorSerivceChannelClient{stream}
	return x, nil
}

type DataCollectorService_CollectorSerivceChannelClient interface {
	Send(*UpChannel) error
	Recv() (*DownChannel, error)
	grpc.ClientStream
}

type dataCollectorServiceCollectorSerivceChannelClient struct {
	grpc.ClientStream
}

func (x *dataCollectorServiceCollectorSerivceChannelClient) Send(m *UpChannel) error {
	return x.ClientStream.SendMsg(m)
}

func (x *dataCollectorServiceCollectorSerivceChannelClient) Recv() (*DownChannel, error) {
	m := new(DownChannel)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for DataCollectorService service

type DataCollectorServiceServer interface {
	// rpc Login (LoginRequest) returns (LoginResponse);
	// rpc Logout(google.protobuf.Empty) returns (google.protobuf.Empty);
	HeartBeatData(context.Context, *HeartBeatDataRequest) (*HeartBeatDataResponse, error)
	DoMetaData(context.Context, *MetaDataRequest) (*MetaDataResponse, error)
	DeleteTags(context.Context, *DeleteTagRequest) (*DeleteTagResponse, error)
	// rpc UpdateTagValue(UpdateTagValueRequest) returns (UpdateTagValueResponse);
	UpdateTagValue(DataCollectorService_UpdateTagValueServer) error
	CollectorSerivceChannel(DataCollectorService_CollectorSerivceChannelServer) error
}

func RegisterDataCollectorServiceServer(s *grpc.Server, srv DataCollectorServiceServer) {
	s.RegisterService(&_DataCollectorService_serviceDesc, srv)
}

func _DataCollectorService_HeartBeatData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeartBeatDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCollectorServiceServer).HeartBeatData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supos.proto.collector.backend.DataCollectorService/HeartBeatData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCollectorServiceServer).HeartBeatData(ctx, req.(*HeartBeatDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCollectorService_DoMetaData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetaDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCollectorServiceServer).DoMetaData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supos.proto.collector.backend.DataCollectorService/DoMetaData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCollectorServiceServer).DoMetaData(ctx, req.(*MetaDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCollectorService_DeleteTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCollectorServiceServer).DeleteTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supos.proto.collector.backend.DataCollectorService/DeleteTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCollectorServiceServer).DeleteTags(ctx, req.(*DeleteTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCollectorService_UpdateTagValue_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DataCollectorServiceServer).UpdateTagValue(&dataCollectorServiceUpdateTagValueServer{stream})
}

type DataCollectorService_UpdateTagValueServer interface {
	SendAndClose(*UpdateTagValueResponse) error
	Recv() (*model.ValueSequnce, error)
	grpc.ServerStream
}

type dataCollectorServiceUpdateTagValueServer struct {
	grpc.ServerStream
}

func (x *dataCollectorServiceUpdateTagValueServer) SendAndClose(m *UpdateTagValueResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *dataCollectorServiceUpdateTagValueServer) Recv() (*model.ValueSequnce, error) {
	m := new(model.ValueSequnce)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _DataCollectorService_CollectorSerivceChannel_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DataCollectorServiceServer).CollectorSerivceChannel(&dataCollectorServiceCollectorSerivceChannelServer{stream})
}

type DataCollectorService_CollectorSerivceChannelServer interface {
	Send(*DownChannel) error
	Recv() (*UpChannel, error)
	grpc.ServerStream
}

type dataCollectorServiceCollectorSerivceChannelServer struct {
	grpc.ServerStream
}

func (x *dataCollectorServiceCollectorSerivceChannelServer) Send(m *DownChannel) error {
	return x.ServerStream.SendMsg(m)
}

func (x *dataCollectorServiceCollectorSerivceChannelServer) Recv() (*UpChannel, error) {
	m := new(UpChannel)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _DataCollectorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "supos.proto.collector.backend.DataCollectorService",
	HandlerType: (*DataCollectorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HeartBeatData",
			Handler:    _DataCollectorService_HeartBeatData_Handler,
		},
		{
			MethodName: "DoMetaData",
			Handler:    _DataCollectorService_DoMetaData_Handler,
		},
		{
			MethodName: "DeleteTags",
			Handler:    _DataCollectorService_DeleteTags_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "UpdateTagValue",
			Handler:       _DataCollectorService_UpdateTagValue_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "CollectorSerivceChannel",
			Handler:       _DataCollectorService_CollectorSerivceChannel_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "datacollectorservice.proto",
}

func (m *MetaDataOperation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MetaDataOperation) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Action != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintDatacollectorservice(dAtA, i, uint64(m.Action))
	}
	if len(m.ObjectName) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintDatacollectorservice(dAtA, i, uint64(len(m.ObjectName)))
		i += copy(dAtA[i:], m.ObjectName)
	}
	if m.AddOrModify != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintDatacollectorservice(dAtA, i, uint64(m.AddOrModify.Size()))
		n1, err := m.AddOrModify.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	return i, nil
}

func (m *MetaDataOperationResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MetaDataOperationResult) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	return i, nil
}

func (m *MetaDataRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MetaDataRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Timestamp) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintDatacollectorservice(dAtA, i, uint64(len(m.Timestamp)))
		i += copy(dAtA[i:], m.Timestamp)
	}
	if len(m.Status) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintDatacollectorservice(dAtA, i, uint64(len(m.Status)))
		i += copy(dAtA[i:], m.Status)
	}
	if m.Version != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintDatacollectorservice(dAtA, i, uint64(m.Version))
	}
	if len(m.Operations) > 0 {
		for _, msg := range m.Operations {
			dAtA[i] = 0x22
			i++
			i = encodeVarintDatacollectorservice(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *MetaDataResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MetaDataResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ErrorCode != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintDatacollectorservice(dAtA, i, uint64(m.ErrorCode))
	}
	return i, nil
}

func (m *DeleteTagRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteTagRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Tags) > 0 {
		for _, s := range m.Tags {
			dAtA[i] = 0xa
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	return i, nil
}

func (m *DeleteTagResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteTagResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ErrorCode != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintDatacollectorservice(dAtA, i, uint64(m.ErrorCode))
	}
	return i, nil
}

func (m *UpdateTagValueRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateTagValueRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Values != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintDatacollectorservice(dAtA, i, uint64(m.Values.Size()))
		n2, err := m.Values.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	return i, nil
}

func (m *UpdateTagValueResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateTagValueResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ErrorCode != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintDatacollectorservice(dAtA, i, uint64(m.ErrorCode))
	}
	return i, nil
}

func (m *LoginRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LoginRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.AuthToken) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintDatacollectorservice(dAtA, i, uint64(len(m.AuthToken)))
		i += copy(dAtA[i:], m.AuthToken)
	}
	if len(m.IdentifyID) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintDatacollectorservice(dAtA, i, uint64(len(m.IdentifyID)))
		i += copy(dAtA[i:], m.IdentifyID)
	}
	if len(m.EndpointName) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintDatacollectorservice(dAtA, i, uint64(len(m.EndpointName)))
		i += copy(dAtA[i:], m.EndpointName)
	}
	return i, nil
}

func (m *LoginResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LoginResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ErrorCode != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintDatacollectorservice(dAtA, i, uint64(m.ErrorCode))
	}
	if len(m.Reason) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintDatacollectorservice(dAtA, i, uint64(len(m.Reason)))
		i += copy(dAtA[i:], m.Reason)
	}
	if len(m.SessionID) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintDatacollectorservice(dAtA, i, uint64(len(m.SessionID)))
		i += copy(dAtA[i:], m.SessionID)
	}
	return i, nil
}

func (m *LogoutRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LogoutRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	return i, nil
}

func (m *LogoutResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LogoutResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	return i, nil
}

func (m *HeartBeatDataRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HeartBeatDataRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Info) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintDatacollectorservice(dAtA, i, uint64(len(m.Info)))
		i += copy(dAtA[i:], m.Info)
	}
	return i, nil
}

func (m *HeartBeatDataResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HeartBeatDataResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Info) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintDatacollectorservice(dAtA, i, uint64(len(m.Info)))
		i += copy(dAtA[i:], m.Info)
	}
	return i, nil
}

func (m *WriteValue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WriteValue) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Values != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintDatacollectorservice(dAtA, i, uint64(m.Values.Size()))
		n3, err := m.Values.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	return i, nil
}

func (m *UpChannel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpChannel) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Cmd != nil {
		nn4, err := m.Cmd.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn4
	}
	return i, nil
}

func (m *UpChannel_LoginRequest) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.LoginRequest != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintDatacollectorservice(dAtA, i, uint64(m.LoginRequest.Size()))
		n5, err := m.LoginRequest.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n5
	}
	return i, nil
}
func (m *UpChannel_LogoutRequest) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.LogoutRequest != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintDatacollectorservice(dAtA, i, uint64(m.LogoutRequest.Size()))
		n6, err := m.LogoutRequest.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n6
	}
	return i, nil
}
func (m *StatusNotify) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatusNotify) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Cmd != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintDatacollectorservice(dAtA, i, uint64(m.Cmd))
	}
	return i, nil
}

func (m *DownChannel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DownChannel) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Cmd != nil {
		nn7, err := m.Cmd.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn7
	}
	return i, nil
}

func (m *DownChannel_StatusNotify) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.StatusNotify != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintDatacollectorservice(dAtA, i, uint64(m.StatusNotify.Size()))
		n8, err := m.StatusNotify.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n8
	}
	return i, nil
}
func (m *DownChannel_LoginResponse) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.LoginResponse != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintDatacollectorservice(dAtA, i, uint64(m.LoginResponse.Size()))
		n9, err := m.LoginResponse.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n9
	}
	return i, nil
}
func (m *DownChannel_LogoutResponse) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.LogoutResponse != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintDatacollectorservice(dAtA, i, uint64(m.LogoutResponse.Size()))
		n10, err := m.LogoutResponse.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n10
	}
	return i, nil
}
func (m *DownChannel_WriteValue) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.WriteValue != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintDatacollectorservice(dAtA, i, uint64(m.WriteValue.Size()))
		n11, err := m.WriteValue.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n11
	}
	return i, nil
}
func encodeVarintDatacollectorservice(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *MetaDataOperation) Size() (n int) {
	var l int
	_ = l
	if m.Action != 0 {
		n += 1 + sovDatacollectorservice(uint64(m.Action))
	}
	l = len(m.ObjectName)
	if l > 0 {
		n += 1 + l + sovDatacollectorservice(uint64(l))
	}
	if m.AddOrModify != nil {
		l = m.AddOrModify.Size()
		n += 1 + l + sovDatacollectorservice(uint64(l))
	}
	return n
}

func (m *MetaDataOperationResult) Size() (n int) {
	var l int
	_ = l
	return n
}

func (m *MetaDataRequest) Size() (n int) {
	var l int
	_ = l
	l = len(m.Timestamp)
	if l > 0 {
		n += 1 + l + sovDatacollectorservice(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovDatacollectorservice(uint64(l))
	}
	if m.Version != 0 {
		n += 1 + sovDatacollectorservice(uint64(m.Version))
	}
	if len(m.Operations) > 0 {
		for _, e := range m.Operations {
			l = e.Size()
			n += 1 + l + sovDatacollectorservice(uint64(l))
		}
	}
	return n
}

func (m *MetaDataResponse) Size() (n int) {
	var l int
	_ = l
	if m.ErrorCode != 0 {
		n += 1 + sovDatacollectorservice(uint64(m.ErrorCode))
	}
	return n
}

func (m *DeleteTagRequest) Size() (n int) {
	var l int
	_ = l
	if len(m.Tags) > 0 {
		for _, s := range m.Tags {
			l = len(s)
			n += 1 + l + sovDatacollectorservice(uint64(l))
		}
	}
	return n
}

func (m *DeleteTagResponse) Size() (n int) {
	var l int
	_ = l
	if m.ErrorCode != 0 {
		n += 1 + sovDatacollectorservice(uint64(m.ErrorCode))
	}
	return n
}

func (m *UpdateTagValueRequest) Size() (n int) {
	var l int
	_ = l
	if m.Values != nil {
		l = m.Values.Size()
		n += 1 + l + sovDatacollectorservice(uint64(l))
	}
	return n
}

func (m *UpdateTagValueResponse) Size() (n int) {
	var l int
	_ = l
	if m.ErrorCode != 0 {
		n += 1 + sovDatacollectorservice(uint64(m.ErrorCode))
	}
	return n
}

func (m *LoginRequest) Size() (n int) {
	var l int
	_ = l
	l = len(m.AuthToken)
	if l > 0 {
		n += 1 + l + sovDatacollectorservice(uint64(l))
	}
	l = len(m.IdentifyID)
	if l > 0 {
		n += 1 + l + sovDatacollectorservice(uint64(l))
	}
	l = len(m.EndpointName)
	if l > 0 {
		n += 1 + l + sovDatacollectorservice(uint64(l))
	}
	return n
}

func (m *LoginResponse) Size() (n int) {
	var l int
	_ = l
	if m.ErrorCode != 0 {
		n += 1 + sovDatacollectorservice(uint64(m.ErrorCode))
	}
	l = len(m.Reason)
	if l > 0 {
		n += 1 + l + sovDatacollectorservice(uint64(l))
	}
	l = len(m.SessionID)
	if l > 0 {
		n += 1 + l + sovDatacollectorservice(uint64(l))
	}
	return n
}

func (m *LogoutRequest) Size() (n int) {
	var l int
	_ = l
	return n
}

func (m *LogoutResponse) Size() (n int) {
	var l int
	_ = l
	return n
}

func (m *HeartBeatDataRequest) Size() (n int) {
	var l int
	_ = l
	l = len(m.Info)
	if l > 0 {
		n += 1 + l + sovDatacollectorservice(uint64(l))
	}
	return n
}

func (m *HeartBeatDataResponse) Size() (n int) {
	var l int
	_ = l
	l = len(m.Info)
	if l > 0 {
		n += 1 + l + sovDatacollectorservice(uint64(l))
	}
	return n
}

func (m *WriteValue) Size() (n int) {
	var l int
	_ = l
	if m.Values != nil {
		l = m.Values.Size()
		n += 1 + l + sovDatacollectorservice(uint64(l))
	}
	return n
}

func (m *UpChannel) Size() (n int) {
	var l int
	_ = l
	if m.Cmd != nil {
		n += m.Cmd.Size()
	}
	return n
}

func (m *UpChannel_LoginRequest) Size() (n int) {
	var l int
	_ = l
	if m.LoginRequest != nil {
		l = m.LoginRequest.Size()
		n += 1 + l + sovDatacollectorservice(uint64(l))
	}
	return n
}
func (m *UpChannel_LogoutRequest) Size() (n int) {
	var l int
	_ = l
	if m.LogoutRequest != nil {
		l = m.LogoutRequest.Size()
		n += 1 + l + sovDatacollectorservice(uint64(l))
	}
	return n
}
func (m *StatusNotify) Size() (n int) {
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovDatacollectorservice(uint64(m.Cmd))
	}
	return n
}

func (m *DownChannel) Size() (n int) {
	var l int
	_ = l
	if m.Cmd != nil {
		n += m.Cmd.Size()
	}
	return n
}

func (m *DownChannel_StatusNotify) Size() (n int) {
	var l int
	_ = l
	if m.StatusNotify != nil {
		l = m.StatusNotify.Size()
		n += 1 + l + sovDatacollectorservice(uint64(l))
	}
	return n
}
func (m *DownChannel_LoginResponse) Size() (n int) {
	var l int
	_ = l
	if m.LoginResponse != nil {
		l = m.LoginResponse.Size()
		n += 1 + l + sovDatacollectorservice(uint64(l))
	}
	return n
}
func (m *DownChannel_LogoutResponse) Size() (n int) {
	var l int
	_ = l
	if m.LogoutResponse != nil {
		l = m.LogoutResponse.Size()
		n += 1 + l + sovDatacollectorservice(uint64(l))
	}
	return n
}
func (m *DownChannel_WriteValue) Size() (n int) {
	var l int
	_ = l
	if m.WriteValue != nil {
		l = m.WriteValue.Size()
		n += 1 + l + sovDatacollectorservice(uint64(l))
	}
	return n
}

func sovDatacollectorservice(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozDatacollectorservice(x uint64) (n int) {
	return sovDatacollectorservice(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MetaDataOperation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDatacollectorservice
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MetaDataOperation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MetaDataOperation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Action", wireType)
			}
			m.Action = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Action |= (MetaDataAction(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ObjectName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddOrModify", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AddOrModify == nil {
				m.AddOrModify = &model1.PropertyOrObject{}
			}
			if err := m.AddOrModify.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDatacollectorservice(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MetaDataOperationResult) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDatacollectorservice
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MetaDataOperationResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MetaDataOperationResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipDatacollectorservice(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MetaDataRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDatacollectorservice
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MetaDataRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MetaDataRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Timestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			m.Version = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Version |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Operations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Operations = append(m.Operations, &MetaDataOperation{})
			if err := m.Operations[len(m.Operations)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDatacollectorservice(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MetaDataResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDatacollectorservice
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MetaDataResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MetaDataResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorCode", wireType)
			}
			m.ErrorCode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ErrorCode |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDatacollectorservice(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteTagRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDatacollectorservice
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteTagRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteTagRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tags", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tags = append(m.Tags, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDatacollectorservice(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteTagResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDatacollectorservice
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteTagResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteTagResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorCode", wireType)
			}
			m.ErrorCode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ErrorCode |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDatacollectorservice(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateTagValueRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDatacollectorservice
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateTagValueRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateTagValueRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Values", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Values == nil {
				m.Values = &model.ValueSequnce{}
			}
			if err := m.Values.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDatacollectorservice(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateTagValueResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDatacollectorservice
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateTagValueResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateTagValueResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorCode", wireType)
			}
			m.ErrorCode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ErrorCode |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDatacollectorservice(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LoginRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDatacollectorservice
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LoginRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LoginRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdentifyID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IdentifyID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndpointName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EndpointName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDatacollectorservice(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LoginResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDatacollectorservice
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LoginResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LoginResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorCode", wireType)
			}
			m.ErrorCode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ErrorCode |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SessionID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDatacollectorservice(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LogoutRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDatacollectorservice
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LogoutRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LogoutRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipDatacollectorservice(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LogoutResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDatacollectorservice
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LogoutResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LogoutResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipDatacollectorservice(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HeartBeatDataRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDatacollectorservice
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeartBeatDataRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeartBeatDataRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Info = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDatacollectorservice(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HeartBeatDataResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDatacollectorservice
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeartBeatDataResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeartBeatDataResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Info = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDatacollectorservice(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WriteValue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDatacollectorservice
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WriteValue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WriteValue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Values", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Values == nil {
				m.Values = &model.ValueSequnce{}
			}
			if err := m.Values.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDatacollectorservice(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpChannel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDatacollectorservice
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpChannel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpChannel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoginRequest", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &LoginRequest{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Cmd = &UpChannel_LoginRequest{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LogoutRequest", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &LogoutRequest{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Cmd = &UpChannel_LogoutRequest{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDatacollectorservice(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatusNotify) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDatacollectorservice
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatusNotify: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatusNotify: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDatacollectorservice(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DownChannel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDatacollectorservice
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DownChannel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DownChannel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StatusNotify", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &StatusNotify{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Cmd = &DownChannel_StatusNotify{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoginResponse", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &LoginResponse{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Cmd = &DownChannel_LoginResponse{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LogoutResponse", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &LogoutResponse{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Cmd = &DownChannel_LogoutResponse{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WriteValue", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &WriteValue{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Cmd = &DownChannel_WriteValue{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDatacollectorservice(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDatacollectorservice
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDatacollectorservice(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDatacollectorservice
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDatacollectorservice
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthDatacollectorservice
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowDatacollectorservice
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipDatacollectorservice(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthDatacollectorservice = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDatacollectorservice   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("datacollectorservice.proto", fileDescriptorDatacollectorservice) }

var fileDescriptorDatacollectorservice = []byte{
	// 895 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xd1, 0x72, 0xdb, 0x44,
	0x14, 0xb5, 0x62, 0x37, 0x8c, 0xaf, 0x13, 0xd7, 0x5d, 0x9a, 0xc4, 0xf5, 0x80, 0xc7, 0xa3, 0x07,
	0xc6, 0x24, 0xc4, 0x0e, 0x2e, 0x30, 0xd3, 0x17, 0x98, 0x26, 0x0a, 0x93, 0x0c, 0x4d, 0x5d, 0x94,
	0x94, 0x0e, 0x2f, 0x65, 0x36, 0xd2, 0x4d, 0x2a, 0x22, 0x69, 0xd5, 0xdd, 0x75, 0x5a, 0xf3, 0x25,
	0xfc, 0x07, 0xc3, 0x13, 0x1f, 0x00, 0x8f, 0x7c, 0x02, 0x93, 0xfe, 0x08, 0xa3, 0xf5, 0xca, 0x5a,
	0x1b, 0x0f, 0x56, 0xfa, 0xa6, 0xbd, 0xba, 0xe7, 0xdc, 0x7b, 0xf6, 0x9e, 0xdd, 0x85, 0x96, 0x4f,
	0x25, 0xf5, 0x58, 0x18, 0xa2, 0x27, 0x19, 0x17, 0xc8, 0xaf, 0x03, 0x0f, 0x7b, 0x09, 0x67, 0x92,
	0x91, 0x8f, 0xc5, 0x28, 0x61, 0x62, 0xb2, 0xe8, 0x4d, 0x73, 0x7a, 0xe7, 0xd4, 0xbb, 0xc2, 0xd8,
	0x6f, 0x7d, 0x33, 0xf9, 0x4d, 0x83, 0x7e, 0xca, 0xb1, 0x1b, 0xd2, 0x2b, 0xec, 0xe3, 0x5b, 0x89,
	0x3c, 0xa6, 0x61, 0x5f, 0x0a, 0xff, 0x7c, 0x37, 0xe1, 0xec, 0xed, 0xb8, 0xef, 0xb1, 0x28, 0x62,
	0x71, 0x3f, 0x62, 0x3e, 0x86, 0xfd, 0x6b, 0x1a, 0x8e, 0x34, 0x7f, 0xeb, 0xeb, 0xf7, 0x21, 0x88,
	0x50, 0xd2, 0x09, 0xde, 0xfe, 0xdd, 0x82, 0x7b, 0x27, 0x28, 0xa9, 0x43, 0x25, 0x1d, 0x26, 0xc8,
	0xa9, 0x0c, 0x58, 0x4c, 0x0e, 0x61, 0x95, 0x7a, 0xe9, 0x57, 0xd3, 0xea, 0x58, 0xdd, 0xfa, 0x60,
	0xb7, 0xf7, 0xbf, 0x32, 0x7a, 0x19, 0xc3, 0x63, 0x05, 0x72, 0x35, 0x98, 0xb4, 0x01, 0xd8, 0xf9,
	0xcf, 0xe8, 0xc9, 0xa7, 0x34, 0xc2, 0xe6, 0x4a, 0xc7, 0xea, 0x56, 0x5d, 0x23, 0x42, 0x1e, 0x41,
	0x8d, 0xfa, 0xfe, 0x90, 0x9f, 0x30, 0x3f, 0xb8, 0x18, 0x37, 0xcb, 0x1d, 0xab, 0x5b, 0x1b, 0x6c,
	0xf5, 0x54, 0x93, 0xbd, 0x67, 0x9c, 0x25, 0xc8, 0xe5, 0x78, 0xc8, 0x87, 0x0a, 0xe1, 0x9a, 0xb9,
	0xf6, 0x03, 0xd8, 0xfa, 0x4f, 0xdb, 0x2e, 0x8a, 0x51, 0x28, 0xed, 0xdf, 0x2c, 0xb8, 0x9b, 0xfd,
	0x73, 0xf1, 0xf5, 0x08, 0x85, 0x24, 0x1f, 0x41, 0x55, 0x06, 0x11, 0x0a, 0x49, 0xa3, 0x44, 0x69,
	0xaa, 0xba, 0x79, 0x80, 0x6c, 0xc2, 0xaa, 0x90, 0x54, 0x8e, 0x84, 0xee, 0x51, 0xaf, 0x48, 0x13,
	0x3e, 0xb8, 0x46, 0x2e, 0xd2, 0x7d, 0x48, 0x7b, 0x2b, 0xbb, 0xd9, 0x92, 0x3c, 0x03, 0x60, 0x59,
	0x59, 0xd1, 0xac, 0x74, 0xca, 0xdd, 0xda, 0x60, 0xaf, 0xe0, 0x26, 0xe5, 0xfd, 0x1a, 0x1c, 0xf6,
	0x1e, 0x34, 0xf2, 0xa6, 0x45, 0xc2, 0x62, 0x81, 0x69, 0xd7, 0xc8, 0x39, 0xe3, 0x07, 0xcc, 0x47,
	0xd5, 0xf5, 0x1d, 0x37, 0x0f, 0xd8, 0x9f, 0x40, 0xc3, 0xc1, 0x10, 0x25, 0x9e, 0xd1, 0xcb, 0x4c,
	0x27, 0x81, 0x8a, 0xa4, 0x97, 0xa2, 0x69, 0x75, 0xca, 0xdd, 0xaa, 0xab, 0xbe, 0xed, 0xcf, 0xe1,
	0x9e, 0x91, 0x57, 0x88, 0xda, 0x81, 0x8d, 0xe7, 0x89, 0x4f, 0x15, 0xe4, 0x87, 0xd4, 0x6d, 0x19,
	0xff, 0x0e, 0xac, 0x2a, 0xf7, 0x09, 0x85, 0xa9, 0x0d, 0x3e, 0xd4, 0xc3, 0x52, 0x49, 0xa7, 0xf8,
	0x7a, 0x14, 0x7b, 0xe8, 0xea, 0x14, 0xfb, 0x2b, 0xd8, 0x9c, 0x67, 0x29, 0x54, 0x3d, 0x81, 0xb5,
	0x27, 0xec, 0x32, 0x88, 0x8d, 0xe1, 0xd1, 0x91, 0x7c, 0x75, 0xc6, 0xae, 0x30, 0xce, 0x86, 0x37,
	0x0d, 0xa4, 0x26, 0x0b, 0x7c, 0x8c, 0x65, 0x70, 0x31, 0x3e, 0x76, 0x32, 0x93, 0xe5, 0x11, 0x62,
	0xc3, 0x1a, 0xc6, 0x7e, 0xc2, 0x82, 0x78, 0x62, 0xc3, 0xb2, 0xca, 0x98, 0x89, 0xd9, 0x1e, 0xac,
	0xeb, 0x8a, 0x45, 0x1a, 0x4c, 0xfd, 0xc2, 0x91, 0x0a, 0x16, 0x67, 0x7e, 0x99, 0xac, 0x52, 0x94,
	0x40, 0x91, 0x1a, 0xe4, 0xd8, 0xd1, 0x75, 0xf2, 0x80, 0x7d, 0x57, 0x15, 0x61, 0x23, 0xa9, 0x75,
	0xd9, 0x0d, 0xa8, 0x67, 0x81, 0x49, 0x59, 0x7b, 0x1b, 0xee, 0x1f, 0x21, 0xe5, 0x72, 0x1f, 0xa9,
	0x34, 0xed, 0x4b, 0xa0, 0x12, 0xc4, 0x17, 0x4c, 0x8b, 0x57, 0xdf, 0xf6, 0x0e, 0x6c, 0xcc, 0xe5,
	0xea, 0xde, 0x17, 0x25, 0x3f, 0x02, 0x78, 0xc1, 0x03, 0x89, 0x6a, 0x0c, 0xb7, 0x9b, 0xe2, 0x1f,
	0x16, 0x54, 0x9f, 0x27, 0x07, 0xaf, 0x68, 0x1c, 0x63, 0x48, 0xbe, 0x87, 0xb5, 0xd0, 0x98, 0x8d,
	0x26, 0xd8, 0x59, 0x62, 0x7d, 0x73, 0x9c, 0x47, 0x25, 0x77, 0x86, 0x82, 0x9c, 0xc1, 0x7a, 0x68,
	0xee, 0x8b, 0xda, 0xd4, 0xda, 0xe0, 0xb3, 0xe5, 0x9c, 0x39, 0xe6, 0xa8, 0xe4, 0xce, 0x92, 0xec,
	0xdf, 0x81, 0xb2, 0x17, 0xf9, 0x76, 0x07, 0xd6, 0x4e, 0xd5, 0x61, 0x7e, 0xca, 0x52, 0x3f, 0x90,
	0x86, 0x0a, 0xeb, 0x91, 0xaa, 0x8c, 0x77, 0x2b, 0x50, 0x73, 0xd8, 0x9b, 0xd8, 0x50, 0x28, 0x0c,
	0x44, 0x41, 0x85, 0x66, 0x91, 0x54, 0xa1, 0x49, 0xa1, 0x15, 0xe6, 0xf6, 0x2a, 0xae, 0x30, 0xc7,
	0x68, 0x85, 0x86, 0x47, 0x5f, 0x40, 0x3d, 0x9c, 0xb1, 0x8f, 0xbe, 0x40, 0x77, 0x0b, 0x6e, 0xdc,
	0x94, 0x77, 0x8e, 0x86, 0x7c, 0x07, 0xf0, 0x66, 0x6a, 0x96, 0x66, 0x45, 0x91, 0x7e, 0xba, 0x84,
	0x34, 0x77, 0xd7, 0x51, 0xc9, 0x35, 0xe0, 0x7a, 0x0e, 0xdb, 0x2f, 0xa1, 0x3e, 0xfb, 0x48, 0x90,
	0x4d, 0x20, 0xb3, 0x91, 0x9f, 0x1e, 0x3b, 0x4e, 0xa3, 0x44, 0x1e, 0xc0, 0xc6, 0x5c, 0xdc, 0x39,
	0x7c, 0x72, 0x78, 0x76, 0xd8, 0xb0, 0x16, 0xfc, 0x3a, 0x19, 0x3a, 0xc7, 0xdf, 0xfe, 0xd8, 0x58,
	0x19, 0xfc, 0x59, 0x81, 0xfb, 0x69, 0xfc, 0x20, 0xeb, 0xec, 0x74, 0xf2, 0x0c, 0x93, 0x5f, 0x60,
	0x7d, 0xe6, 0x98, 0x90, 0x87, 0x4b, 0x94, 0x2c, 0x3a, 0x80, 0xad, 0x2f, 0x6e, 0x07, 0xd2, 0x1b,
	0x19, 0x01, 0x38, 0x2c, 0xeb, 0x98, 0xf4, 0x0a, 0xbe, 0x0f, 0x59, 0xcd, 0x7e, 0xe1, 0x7c, 0x5d,
	0x8e, 0x01, 0x4c, 0x2f, 0x7a, 0x41, 0x96, 0xc1, 0xe7, 0xdf, 0x8e, 0xd6, 0x5e, 0x71, 0x80, 0x2e,
	0xf8, 0x12, 0xea, 0xb3, 0x17, 0x3c, 0x59, 0x74, 0x93, 0xb4, 0xbe, 0x5c, 0x42, 0xbc, 0xf8, 0x91,
	0xe8, 0x5a, 0x44, 0xc0, 0x96, 0x39, 0xcf, 0xe0, 0xda, 0xc3, 0xec, 0x94, 0x76, 0x97, 0x72, 0xea,
	0xcc, 0xd6, 0xf6, 0x32, 0x59, 0xf9, 0xd9, 0xef, 0x5a, 0x7b, 0xd6, 0x7e, 0xe3, 0xaf, 0x9b, 0xb6,
	0xf5, 0xf7, 0x4d, 0xdb, 0xfa, 0xe7, 0xa6, 0x6d, 0xfd, 0xfa, 0xae, 0x5d, 0x3a, 0x5f, 0x55, 0xd0,
	0x87, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x9e, 0x8b, 0x49, 0xf8, 0xe8, 0x09, 0x00, 0x00,
}
